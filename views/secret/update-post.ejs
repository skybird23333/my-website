<%- include('../partials/header')%>
    <div class="side-contents">
        <h3>Editor</h3>
        <div id="editor-buttons">
            <div class="button primary" onclick="onChangeMode(this)" id="button-preview">Preview changes</div>
            <div class="button confirm" onclick="onSubmitChange(this)" id="button-submit">Save changes</div>
        </div>
    </div>
    <div class="content">
        <div class="content-header">
            <h1 style="margin-block-end: 5px;">Editing <%=post.title %>
            </h1>
        </div>
        <div class="content-content">
            <div id="editor">
                <code>
                    <textarea
                        style="width: 100%; resize: none;"
                        class="input" id="editor-textarea"
                        onkeyup="onEdit(this)"
                    ><%=post.content %></textarea>
                </code>
            </div>
        </div>

    </div>
    <script src="https://unpkg.com/diff@5.1.0/dist/diff.js"></script>
    <script>
        var mode = 'edit' // 'edit' | 'preview'

        let originalEditorContent = document.getElementById('editor-textarea').value;
        var currentEditorContent = originalEditorContent;

        setTimeout(() => {
            textAreaAdjust(document.getElementById("editor-textarea"));
        })

        function textAreaAdjust(element) {
            element.style.height = "1px";
            element.style.height = (25 + element.scrollHeight) + "px";
        }

        function onEdit(element) {
            currentEditorContent = element.value;
        }

        function onChangeMode(element) {
            if (mode === 'edit') {
                mode = 'preview'
                element.innerText = 'Editing mode'
                
                const diff = Diff.diffLines(originalEditorContent, currentEditorContent),

                fragment = document.createDocumentFragment();
                
                diff.forEach((part) => {
                    const className = part.added ? 'addition' : part.removed ? 'deletion' : '';
                    span = document.createElement('span');
                    span.className = className;
                    span.innerHTML = part.value.replace(/\n/g, '<br>')
                    fragment.appendChild(span);
                });
                
                document.getElementById('editor').innerHTML = '<pre><code id="preview"></code></pre>'
                document.getElementById('preview').appendChild(fragment);
            } else {
                mode = 'edit'
                element.innerText = 'Preview mode'
                document.getElementById('editor').innerHTML = '<code><textarea style="width: 100%; resize: none;" class="input" id="editor-textarea" onkeyup="onEdit(this)"></textarea></code>'
                document.getElementById('editor-textarea').value = currentEditorContent
                textAreaAdjust(document.getElementById("editor-textarea"))
            }
        }

        function onSubmitChange(element) {
            const xhr = new XMLHttpRequest();
            xhr.open('PATCH', '/api/secret/update-post/<%=post.id %>'); //TODO: fix api first
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onload = function () {
                if (xhr.status === 200) {
                    originalEditorContent = currentEditorContent
                    alert('Post updated successfully')
                } else {
                    alert('Request failed.  Returned status of ' + xhr.status);
                }
            };
            xhr.send(JSON.stringify({
                content: currentEditorContent
            }));
        }

        // Event listener for the 'beforeunload' event
        window.addEventListener('beforeunload', function (e) {
            e.preventDefault();
            e.returnValue = '';
        });
    </script>
    <style scoped>
        .content-content {
            padding: 0
        }

        .input, pre {
            margin: 0;
            border-radius: 0;
            border: 0;
            padding: 0;
        }

        .input:hover {
            border: 0;
        }
        
        .input:focus {
            outline: none;
            border: none
        }

        .addition {
            background-color: #00ff4860;
        }
        
        .deletion {
            background-color: #ff00005e;
        }
        
        .addition::before {
            content: '+';
        }

        .deletion::before {
            content: '-';
        }

        pre {
            white-space: pre-wrap;
            white-space: -moz-pre-wrap;
            white-space: -pre-wrap;
            white-space: -o-pre-wrap;
            word-wrap: break-word;
        }
    </style>
    <%- include('../partials/footer')%>